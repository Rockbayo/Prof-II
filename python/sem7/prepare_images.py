"""
Script para preparar las im√°genes de los modelos de ML
Este script crea los directorios necesarios para las im√°genes
"""
import os
import sys

def create_directories():
    """Crear los directorios necesarios para la aplicaci√≥n"""
    directories = [
        'static/images/models',
        'templates/modelos',
    ]
    
    for directory in directories:
        if not os.path.exists(directory):
            try:
                os.makedirs(directory)
                print(f"‚úÖ Directorio creado: {directory}")
            except Exception as e:
                print(f"‚ùå Error al crear el directorio {directory}: {e}")
                sys.exit(1)
        else:
            print(f"‚ö†Ô∏è El directorio ya existe: {directory}")

def create_placeholder_images():
    """Crear archivos de texto como placeholders para las im√°genes"""
    modelos = [
        'logistic_regression',
        'knn',
        'decision_tree',
        'random_forest',
        'svm',
        'gradient_boosting',
        'naive_bayes',
    ]
    
    for modelo in modelos:
        path = f'static/images/models/{modelo}.png'
        if not os.path.exists(path):
            try:
                with open(path, 'w') as f:
                    f.write(f"# Placeholder para {modelo}\n")
                    f.write("# Reemplaza este archivo con una imagen real de tipo PNG\n")
                print(f"‚úÖ Placeholder creado: {path}")
            except Exception as e:
                print(f"‚ùå Error al crear el placeholder {path}: {e}")
        else:
            print(f"‚ö†Ô∏è El archivo ya existe: {path}")

def main():
    """Funci√≥n principal"""
    print("\nüì¶ Preparando la aplicaci√≥n de modelos ML...\n")
    
    # Crear directorios
    create_directories()
    
    # Crear placeholders
    create_placeholder_images()
    
    print("\n‚úÖ Todo est√° listo!")
    print("üìã Pasos siguientes:")
    print("  1. Reemplaza los archivos placeholder en 'static/images/models/' con im√°genes reales")
    print("  2. Ejecuta la aplicaci√≥n con 'flask run'\n")

if __name__ == "__main__":
    main()
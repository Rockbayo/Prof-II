import io
import base64
import matplotlib
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.linear_model import LinearRegression

# Datos a trabajar
data = {
    "Superficie": [37,97,30,57,93,55,80,55,55,14,93,27,45,54,62,99,71,18,89,80,44,48,12,46,78,86,49,40,27,63,75,33,65,26,14,38,41,31,56,30,48,89,42,37,53,37,77,43,45,63,46,66,79,71,98,10,16,29,72,37,52,53,40,30,67,21,58,32,55,47,64,32,88,72,69,84,49,98,43,19,59,28,18,20,27,40,75,62,89,98,74,84,89,54,74,83,28,22,32,87,42,95,11,45,59,98,81,82,78,94,29,78,61,50,30,26,94,55,48,86,61,22,82,94,80,57,71,51,55,66,62,28,76,50,29,27,95,16,12,30,75,36,59,12,86,83,47,91,78,36,89,37,84,93,27,38,36,84,24,33,33,25,42,55,22,76,15,65,23,19,98,39,30,82,68,56,86,50,24,57,68,98,38,59,88,28,85,18,61,62,44,23,82,55,73,31,74,65,14,18,59,19,69,85,95,67,13,42,43,41,77,48,73,13,10,88,38,92,99,69,98,36,61,76,11,11,80,22,63,23,24,40,94,83,19,61,34,77,91,41,35,16,97,72,60,61,64,61,31,70,54,15,18,81,36,82,38,20,22,80,58,36,31,70,63,95,45,48,49,73,92,21,100,12,98,39,24,88,39,53,93,93,16,74,71,61,54,64,35,36,12,41,29,84,17,53,36,45,38,37,83,51,46,32,89,98,59,51,42,13,32,20,62,63,28,21,95,27,93,84,76,63,34,76,29,24,41,24,91,61,93,11,49,52,55,14,44,53,40,84,69,50,95,55,78,50,76,66,52,22,73,98,52,19,52,41,88,29,29,88,42,70,72,49,67,96,76,48,97,70,93,97,77,43,62,50,20,84,74,28,35,58,74,28,54,20,68,61,93,87,54,90,23,11,87,82,55,30,58,18,98,97,99,42,76,15,61,11,41,88,85,58,25,14,49,35,88,52,18,96,63,14,21,91,92,70,97,95,60,69,96,58,65,91,25,70,70,44,10,80,80,76,89,33,94,35,32,37,62,34,73,98,74,48,78,89,20,12,24,46,97,27,37,62,88,19,38,72,17,26,61,27,17,59,73,27,66,100,83,12,94,14,44,28,67,12,42,27,34,69,53,18,95,71,16,85,81,26,12,74],

    "Produccion": [231,568,185,341,550,338,473,334,335,87,545,169,272,317,372,581,419,114,520,483,273,291,83,280,458,518,293,238,167,374,440,209,379,160,93,220,248,178,340,187,292,533,259,225,311,226,452,265,261,380,275,393,472,427,583,70,102,176,427,230,319,317,239,181,394,130,346,198,340,281,379,193,510,422,407,497,293,577,259,113,354,171,114,129,164,248,449,371,523,588,453,499,522,336,443,494,173,131,192,515,246,562,70,271,361,582,475,486,461,545,182,454,371,300,188,170,550,326,287,496,368,136,482,553,471,342,425,305,321,390,371,171,455,298,180,169,555,99,84,185,437,221,356,83,516,499,284,537,469,222,532,226,503,552,167,232,218,497,161,201,199,156,255,331,130,459,92,386,148,125,583,250,177,487,413,343,509,305,148,337,413,581,236,359,521,171,499,119,365,373,266,148,475,333,441,192,440,389,98,120,356,117,415,499,562,398,96,268,259,254,473,283,431,88,62,515,237,539,585,410,577,219,371,448,81,77,465,136,371,131,158,236,554,491,113,358,202,464,544,249,216,106,570,431,357,371,382,366,193,421,324,95,118,476,215,489,230,131,142,487,343,215,185,416,383,565,273,288,304,434,552,127,588,85,577,238,143,527,246,322,544,550,104,425,420,373,319,383,207,216,80,249,180,498,97,319,215,273,231,223,490,300,268,200,516,584,354,303,268,81,192,134,379,374,179,126,556,164,558,492,445,377,213,447,177,151,249,151,542,349,566,79,289,306,335,97,258,322,241,492,409,302,556,336,463,299,443,395,312,136,429,577,314,126,315,254,526,184,185,520,257,414,431,292,403,573,452,290,576,418,545,577,460,266,367,296,134,499,442,176,208,352,439,172,322,130,411,364,548,513,331,525,148,72,519,493,323,189,347,118,576,576,585,259,461,101,367,79,254,524,510,348,160,97,298,213,519,313,113,568,382,89,124,547,555,416,571,566,365,415,572,340,382,547,152,415,416,268,71,474,470,460,529,205,565,213,201,220,361,208,423,580,439,295,468,522,129,83,151,283,569,171,212,372,517,129,230,422,107,159,359,166,116,354,436,160,399,588,492,95,555,94,266,178,398,79,249,170,210,415,320,124,567,421,101,504,494,163,81,437]

}

# Convertir los datos a un DataFrame de pandas
df = pd.DataFrame(data)

# Definir variables independientes y dependientes
x = df[["Superficie"]] # Variable independiente (Superficie)
y = df["Produccion"]

# Crear y entrenar el modelo
model = LinearRegression() # Crea
model.fit(x, y) #Entrena

# Definir la función para calcular la producción
def calcular_produccion(superficie):
    """
    Calcular la producción basada en la superficie.
    """
    result = model.predict([[superficie]]) # Predice
    return result[0] # Muestra la predicción}

# Definir la función para generar el gráfico
def generate_graph(user_superficie): # Genera el gráfico

    # Crear el gráfico de dispersión
    plt.figure(figsize=(18, 12)) 
    plt.scatter(x, y, color='yellow', label='Datos reales') # Dataset

    # Dibujar la línea de regresión
    plt.plot(x, model.predict(x), color='orange',
             linewidth=3, linestyle='dashed', label='Regresion Lineal')
    
    # Dibujar el punto del usuario
    user_superficie = calcular_produccion(user_superficie) # Predicción
    plt.scatter([user_superficie], [user_superficie], color='red',
                s=300, zorder=5, label='Predicción') # Predicción del usuario
    
    # Añadir etiquetas y título
    plt.xlabel('Superficie', fontsize=18)
    plt.ylabel('Producción', fontsize=18)
    plt.title(
        'Regresión Lineal: Superficie vs. Producción', fontsize=22)
    plt.legend(fontsize=16)

    # Guardar el gráfico en un objeto BytesIO
    buf = io.BytesIO() # Guardar en memoria
    plt.savefig(buf, format='png', bbox_inches='tight') # Guardar gráfico
    buf.seek(0) # Volver al inicio del buffer
    plt.close() # Cerrar el gráfico

    # Codificar la imagen en base64
    graph_image = base64.b64encode(buf.getvalue()).decode('utf-8') # Codificar
    return graph_image # Retornar imagen codificada
    